class Solution {
    class Pair{
        char ele;
        int c;
        Pair(char ele,int c){
            this.ele=ele;
            this.c=c;
        }
    }
    public String removeDuplicates(String s, int k) {
        Stack<Pair>st=new Stack<>();
        for(char ch:s.toCharArray()){
            if(st.isEmpty()|| st.peek().ele!=ch){
                st.push(new Pair(ch,1));
            }
            else{
                if(st.peek().c<k){
                    st.push(new Pair(ch,st.peek().c+1));
                }
                if(st.peek().c==k){
                    char ele=st.peek().ele;
                    while(!st.isEmpty() && st.peek().ele==ele){
                        st.pop();
                    }
                }
            }
        }
        StringBuilder ans=new StringBuilder();
        while(!st.isEmpty()){
            ans.append(st.pop().ele);
        }
        return ans.reverse().toString();
    }
}
