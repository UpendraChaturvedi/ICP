class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n = nums.length;
        int[] ans = new int[n - k + 1];
        Deque<Integer> dq = new ArrayDeque<>();
        int i = 0, j = 0, idx = 0;
        while (j < n) {
            while (!dq.isEmpty() && dq.peekLast() < nums[j]) {
                dq.pollLast();
            }
            dq.offerLast(nums[j]);
            if (j - i + 1 < k) {
                j++;
            } 
            else if (j - i + 1 == k) {
                ans[idx++] = dq.peekFirst();
                if (dq.peekFirst() == nums[i]) {
                    dq.pollFirst();
                }
                i++;
                j++;
            }
        }
        return ans;
    }
}
